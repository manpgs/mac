<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>man2 &mdash; macOS Manpages</title>
    <link rel="stylesheet" href="../style.css">
  </head>
  <body>
    <main>
      <h1><a href="../">macOS</a> &mdash; System Calls</h1>
      <ul class="whatis">
        <li><a href="./FD_CLR">FD_CLR(2)</a>, <a href="./FD_COPY">FD_COPY(2)</a>, <a href="./FD_ISSET">FD_ISSET(2)</a>, <a href="./FD_SET">FD_SET(2)</a>, <a href="./FD_ZERO">FD_ZERO(2)</a>, <a href="./select">select(2)</a> &mdash; synchronous I/O multiplexing</li>
        <li><a href="./_exit">_exit(2)</a>                 &mdash; terminate the calling process</li>
        <li><a href="./accept">accept(2)</a>                &mdash; accept a connection on a socket</li>
        <li><a href="./access">access(2)</a>, <a href="./faccessat">faccessat(2)</a>  &mdash; check accessibility of a file</li>
        <li><a href="./acct">acct(2)</a>                  &mdash; enable or disable process accounting</li>
        <li><a href="./adjtime">adjtime(2)</a>               &mdash; correct the time to allow synchronization of the system clock</li>
        <li><a href="./aio_cancel">aio_cancel(2)</a>            &mdash; cancel an outstanding asynchronous I/O operation (REALTIME)</li>
        <li><a href="./aio_error">aio_error(2)</a>             &mdash; retrieve error status of asynchronous I/O operation (REALTIME)</li>
        <li><a href="./aio_read">aio_read(2)</a>              &mdash; asynchronous read from a file (REALTIME)</li>
        <li><a href="./aio_return">aio_return(2)</a>            &mdash; retrieve return status of asynchronous I/O operation (REALTIME)</li>
        <li><a href="./aio_suspend">aio_suspend(2)</a>           &mdash; suspend until asynchronous I/O operations or timeout complete (REALTIME)</li>
        <li><a href="./aio_write">aio_write(2)</a>             &mdash; asynchronous write to a file (REALTIME)</li>
        <li><a href="./audit">audit(2)</a>                 &mdash; commit BSM audit record to audit log</li>
        <li><a href="./auditctl">auditctl(2)</a>              &mdash; configure system audit parameters</li>
        <li><a href="./auditon">auditon(2)</a>               &mdash; configure system audit parameters</li>
        <li><a href="./bind">bind(2)</a>                  &mdash; bind a name to a socket</li>
        <li><a href="./brk">brk(2)</a>, <a href="./sbrk">sbrk(2)</a>          &mdash; change data segment size</li>
        <li><a href="./chdir">chdir(2)</a>, <a href="./fchdir">fchdir(2)</a>      &mdash; change current working directory</li>
        <li><a href="./chflags">chflags(2)</a>, <a href="./fchflags">fchflags(2)</a>  &mdash; set file flags</li>
        <li><a href="./chmod">chmod(2)</a>, <a href="./fchmod">fchmod(2)</a>, <a href="./fchmodat">fchmodat(2)</a> &mdash; change mode of file</li>
        <li><a href="./chown">chown(2)</a>, <a href="./fchown">fchown(2)</a>, <a href="./lchown">lchown(2)</a>, <a href="./fchownat">fchownat(2)</a> &mdash; change owner and group of a file</li>
        <li><a href="./chroot">chroot(2)</a>                &mdash; change root directory</li>
        <li><a href="./clonefile">clonefile(2)</a>             &mdash; create copy on write clones of files</li>
        <li><a href="./close">close(2)</a>                 &mdash; delete a descriptor</li>
        <li><a href="./connect">connect(2)</a>               &mdash; initiate a connection on a socket</li>
        <li><a href="./connectx">connectx(2)</a>              &mdash; initiate a connection on a socket</li>
        <li><a href="./creat">creat(2)</a>                 &mdash; create a new file</li>
        <li><a href="./disconnectx">disconnectx(2)</a>           &mdash; disconnects a connection on a socket</li>
        <li><a href="./dup">dup(2)</a>, <a href="./dup2">dup2(2)</a>          &mdash; duplicate an existing file descriptor</li>
        <li><a href="./exchangedata">exchangedata(2)</a>          &mdash; atomically exchange data between two files</li>
        <li><a href="./execve">execve(2)</a>                &mdash; execute a file</li>
        <li><a href="./fcntl">fcntl(2)</a>                 &mdash; file control</li>
        <li><a href="./fhopen">fhopen(2)</a>                &mdash; open a file by file handle</li>
        <li><a href="./flock">flock(2)</a>                 &mdash; apply or remove an advisory lock on an open file</li>
        <li><a href="./fork">fork(2)</a>                  &mdash; create a new process</li>
        <li><a href="./fpathconf">fpathconf(2)</a>, <a href="./pathconf">pathconf(2)</a> &mdash; get configurable pathname variables</li>
        <li><a href="./fs_snapshot_create">fs_snapshot_create(2)</a>    &mdash; create read only snapshot of a mounted filesystem</li>
        <li><a href="./fsgetpath">fsgetpath(2)</a>             &mdash; get the path associated with filesystem node identifier (inode number/link id/object id)</li>
        <li><a href="./fstat">fstat(2)</a>, <a href="./fstat64">fstat64(2)</a>, <a href="./lstat">lstat(2)</a>, <a href="./lstat64">lstat64(2)</a>, <a href="./stat">stat(2)</a>, <a href="./stat64">stat64(2)</a>, <a href="./fstatat">fstatat(2)</a> &mdash; get file status</li>
        <li><a href="./fsync">fsync(2)</a>                 &mdash; synchronize a file's in-core state with that on disk</li>
        <li><a href="./ftruncate">ftruncate(2)</a>, <a href="./truncate">truncate(2)</a> &mdash; truncate or extend a file to a specified length</li>
        <li><a href="./futimens">futimens(2)</a>, <a href="./utimensat">utimensat(2)</a> &mdash; set file access and modification times</li>
        <li><a href="./futimes">futimes(2)</a>, <a href="./utimes">utimes(2)</a>    &mdash; set file access and modification times</li>
        <li><a href="./getattrlist">getattrlist(2)</a>, <a href="./fgetattrlist">fgetattrlist(2)</a>, <a href="./getattrlistat">getattrlistat(2)</a> &mdash; get file system attributes</li>
        <li><a href="./getattrlistbulk">getattrlistbulk(2)</a>       &mdash; get file system attributes for multiple directory entries</li>
        <li><a href="./getaudit_addr">getaudit_addr(2)</a>, getaudit<a href="./(NOW DEPRECATED)">(NOW DEPRECATED)(2)</a> &mdash; retrieve audit session state</li>
        <li><a href="./getauid">getauid(2)</a>               &mdash; retrieve audit user ID</li>
        <li><a href="./getdirentries">getdirentries(2)</a>         &mdash; get directory entries in a filesystem independent format</li>
        <li><a href="./getdirentriesattr">getdirentriesattr(2)</a>, getdirentriesattr<a href="./(NOW DEPRECATED)">(NOW DEPRECATED)(2)</a> &mdash; get file system attributes for multiple directory entries</li>
        <li><a href="./getdtablesize">getdtablesize(2)</a>         &mdash; get descriptor table size</li>
        <li><a href="./getegid">getegid(2)</a>, <a href="./getgid">getgid(2)</a>    &mdash; get group process identification</li>
        <li><a href="./getentropy">getentropy(2)</a>            &mdash; get entropy</li>
        <li><a href="./geteuid">geteuid(2)</a>, <a href="./getuid">getuid(2)</a>    &mdash; get user identification</li>
        <li><a href="./getfh">getfh(2)</a>                 &mdash; get file handle</li>
        <li><a href="./getfsstat">getfsstat(2)</a>             &mdash; get list of all mounted file systems</li>
        <li><a href="./getgroups">getgroups(2)</a>             &mdash; get group access list</li>
        <li><a href="./gethostuuid">gethostuuid(2)</a>           &mdash; return a unique identifier for the current machine</li>
        <li><a href="./getitimer">getitimer(2)</a>, <a href="./setitimer">setitimer(2)</a> &mdash; get/set value of interval timer</li>
        <li><a href="./getlogin">getlogin(2)</a>, <a href="./setlogin">setlogin(2)</a> &mdash; get/set login name</li>
        <li><a href="./getpeername">getpeername(2)</a>           &mdash; get address of connected peer</li>
        <li><a href="./getpgid">getpgid(2)</a>, <a href="./getpgrp">getpgrp(2)</a>   &mdash; get process group</li>
        <li><a href="./getpid">getpid(2)</a>, <a href="./getppid">getppid(2)</a>    &mdash; get parent or calling process identification</li>
        <li><a href="./getpriority">getpriority(2)</a>, <a href="./setpriority">setpriority(2)</a> &mdash; get/set program scheduling priority</li>
        <li><a href="./getrlimit">getrlimit(2)</a>, <a href="./setrlimit">setrlimit(2)</a> &mdash; control maximum system resource consumption</li>
        <li><a href="./getrusage">getrusage(2)</a>             &mdash; get information about resource utilization</li>
        <li><a href="./getsid">getsid(2)</a>                &mdash; get process session</li>
        <li><a href="./getsockname">getsockname(2)</a>           &mdash; get socket name</li>
        <li><a href="./getsockopt">getsockopt(2)</a>, <a href="./setsockopt">setsockopt(2)</a> &mdash; get and set options on sockets</li>
        <li><a href="./gettimeofday">gettimeofday(2)</a>, <a href="./settimeofday">settimeofday(2)</a> &mdash; get/set date and time</li>
        <li><a href="./getxattr">getxattr(2)</a>, <a href="./fgetxattr">fgetxattr(2)</a> &mdash; get an extended attribute value</li>
        <li><a href="./i386_get_ldt">i386_get_ldt(2)</a>, <a href="./i386_set_ldt">i386_set_ldt(2)</a> &mdash; manage i386 per-process Local Descriptor Table entries</li>
        <li><a href="./intro">intro(2)</a>                 &mdash; introduction to system calls and error numbers</li>
        <li><a href="./ioctl">ioctl(2)</a>                 &mdash; control device</li>
        <li><a href="./issetugid">issetugid(2)</a>             &mdash; is current process tainted by uid or gid changes</li>
        <li><a href="./kill">kill(2)</a>                  &mdash; send signal to a process</li>
        <li><a href="./killpg">killpg(2)</a>                &mdash; send signal to a process group</li>
        <li><a href="./kqueue">kqueue(2)</a>, <a href="./kevent">kevent(2)</a>, <a href="./kevent64">kevent64(2)</a> &mdash; and kevent_qos kernel event notification mechanism</li>
        <li><a href="./link">link(2)</a>, <a href="./linkat">linkat(2)</a>       &mdash; make a hard file link</li>
        <li><a href="./listen">listen(2)</a>                &mdash; listen for connections on a socket</li>
        <li><a href="./listxattr">listxattr(2)</a>, <a href="./flistxattr">flistxattr(2)</a> &mdash; list extended attribute names</li>
        <li><a href="./lseek">lseek(2)</a>                 &mdash; reposition read/write file offset</li>
        <li><a href="./madvise">madvise(2)</a>, <a href="./posix_madvise">posix_madvise(2)</a> &mdash; give advice about use of memory</li>
        <li><a href="./mincore">mincore(2)</a>               &mdash; determine residency of memory pages</li>
        <li><a href="./minherit">minherit(2)</a>              &mdash; control the inheritance of pages</li>
        <li><a href="./mkdir">mkdir(2)</a>, <a href="./mkdirat">mkdirat(2)</a>     &mdash; make a directory file</li>
        <li><a href="./mkfifo">mkfifo(2)</a>, <a href="./mkfifoat">mkfifoat(2)</a>   &mdash; make a fifo file</li>
        <li><a href="./mknod">mknod(2)</a>, <a href="./mknodat">mknodat(2)</a>     &mdash; make a special file node</li>
        <li><a href="./mlock">mlock(2)</a>, <a href="./munlock">munlock(2)</a>     &mdash; lock (unlock) physical pages in memory</li>
        <li><a href="./mmap">mmap(2)</a>                  &mdash; allocate memory, or map files or devices into memory</li>
        <li><a href="./mount">mount(2)</a>, <a href="./fmount">fmount(2)</a>, <a href="./unmount">unmount(2)</a> &mdash; mount or dismount a filesystem</li>
        <li><a href="./mprotect">mprotect(2)</a>              &mdash; control the protection of pages</li>
        <li><a href="./msync">msync(2)</a>                 &mdash; synchronize a mapped region</li>
        <li><a href="./munmap">munmap(2)</a>                &mdash; remove a mapping</li>
        <li><a href="./nanosleep">nanosleep(2)</a>             &mdash; suspend thread execution for an interval measured in nanoseconds</li>
        <li><a href="./nfsclnt">nfsclnt(2)</a>               &mdash; NFS client services</li>
        <li><a href="./nfssvc">nfssvc(2)</a>                &mdash; NFS services</li>
        <li><a href="./open">open(2)</a>, <a href="./openat">openat(2)</a>       &mdash; open or create a file for reading or writing</li>
        <li><a href="./pipe">pipe(2)</a>                  &mdash; create descriptor pair for interprocess communication</li>
        <li><a href="./poll">poll(2)</a>                  &mdash; synchronous I/O multiplexing</li>
        <li><a href="./posix_spawn">posix_spawn(2)</a>, <a href="./posix_spawn posix_spawnp">posix_spawn posix_spawnp(2)</a> &mdash; spawn a process</li>
        <li><a href="./pread">pread(2)</a>, <a href="./read">read(2)</a>, <a href="./preadv">preadv(2)</a>, <a href="./readv">readv(2)</a> &mdash; read input</li>
        <li><a href="./pselect">pselect(2)</a>               &mdash; synchronous I/O multiplexing a la POSIX.1g</li>
        <li><a href="./pthread_kill">pthread_kill(2)</a>          &mdash; send a signal to a specified thread</li>
        <li><a href="./pthread_setugid_np">pthread_setugid_np(2)</a>    &mdash; Set the per-thread userid and single groupid</li>
        <li><a href="./pthread_sigmask">pthread_sigmask(2)</a>       &mdash; examine and/or change a thread's signal mask</li>
        <li><a href="./ptrace">ptrace(2)</a>                &mdash; process tracing and debugging</li>
        <li><a href="./pwrite">pwrite(2)</a>, <a href="./write">write(2)</a>, <a href="./pwritev">pwritev(2)</a>, <a href="./writev">writev(2)</a> &mdash; write output</li>
        <li><a href="./quotactl">quotactl(2)</a>              &mdash; manipulate filesystem quotas</li>
        <li><a href="./readlink">readlink(2)</a>, <a href="./readlinkat">readlinkat(2)</a>, <a href="./freadlink">freadlink(2)</a> &mdash; read value of a symbolic link</li>
        <li><a href="./reboot">reboot(2)</a>                &mdash; reboot system or halt processor</li>
        <li><a href="./recv">recv(2)</a>, <a href="./recvfrom">recvfrom(2)</a>, <a href="./recvmsg">recvmsg(2)</a> &mdash; receive a message from a socket</li>
        <li><a href="./removexattr">removexattr(2)</a>, <a href="./fremovexattr">fremovexattr(2)</a> &mdash; remove an extended attribute value</li>
        <li><a href="./rename">rename(2)</a>, <a href="./renameat">renameat(2)</a>, <a href="./renamex_np">renamex_np(2)</a>, <a href="./renameatx_np">renameatx_np(2)</a> &mdash; change the name of a file</li>
        <li><a href="./revoke">revoke(2)</a>                &mdash; revoke file access</li>
        <li><a href="./rmdir">rmdir(2)</a>                 &mdash; remove a directory file</li>
        <li><a href="./searchfs">searchfs(2)</a>              &mdash; search a volume quickly</li>
        <li><a href="./sem_close">sem_close(2)</a>             &mdash; close a named semaphore</li>
        <li><a href="./sem_open">sem_open(2)</a>              &mdash; initialize and open a named semaphore</li>
        <li><a href="./sem_post">sem_post(2)</a>              &mdash; unlock a semaphore</li>
        <li><a href="./sem_trywait">sem_trywait(2)</a>, <a href="./sem_wait">sem_wait(2)</a> &mdash; lock a semaphore</li>
        <li><a href="./sem_unlink">sem_unlink(2)</a>            &mdash; remove a named semaphore</li>
        <li><a href="./semctl">semctl(2)</a>                &mdash; control operations on a semaphore set</li>
        <li><a href="./semget">semget(2)</a>                &mdash; obtain a semaphore id</li>
        <li><a href="./semop">semop(2)</a>                 &mdash; atomic array of operations on a semaphore set</li>
        <li><a href="./send">send(2)</a>, <a href="./sendmsg">sendmsg(2)</a>, <a href="./sendto">sendto(2)</a> &mdash; send a message from a socket</li>
        <li><a href="./sendfile">sendfile(2)</a>              &mdash; send a file to a socket</li>
        <li><a href="./setattrlist">setattrlist(2)</a>, <a href="./fsetattrlist">fsetattrlist(2)</a>, <a href="./setattrlistat">setattrlistat(2)</a> &mdash; set file system attributes</li>
        <li><a href="./setaudit_addr">setaudit_addr(2)</a>, setaudit<a href="./(NOW DEPRECATED)">(NOW DEPRECATED)(2)</a> &mdash; set audit session state</li>
        <li><a href="./setauid">setauid(2)</a>               &mdash; set audit indentifier</li>
        <li><a href="./setegid">setegid(2)</a>, <a href="./seteuid">seteuid(2)</a>, <a href="./setgid">setgid(2)</a>, <a href="./setuid">setuid(2)</a> &mdash; set user and group ID</li>
        <li><a href="./setgroups">setgroups(2)</a>             &mdash; set group access list</li>
        <li><a href="./setpgid">setpgid(2)</a>, <a href="./setpgrp">setpgrp(2)</a>   &mdash; set process group</li>
        <li><a href="./setregid">setregid(2)</a>              &mdash; set real and effective group ID</li>
        <li><a href="./setreuid">setreuid(2)</a>              &mdash; set real and effective user IDs</li>
        <li><a href="./setsid">setsid(2)</a>                &mdash; create session and set process group ID</li>
        <li><a href="./setxattr">setxattr(2)</a>, <a href="./fsetxattr">fsetxattr(2)</a> &mdash; set an extended attribute value</li>
        <li><a href="./shm_open">shm_open(2)</a>              &mdash; open a shared memory object</li>
        <li><a href="./shm_unlink">shm_unlink(2)</a>            &mdash; remove shared memory object</li>
        <li><a href="./shmat">shmat(2)</a>, <a href="./shmdt">shmdt(2)</a>       &mdash; map/unmap shared memory</li>
        <li><a href="./shmctl">shmctl(2)</a>                &mdash; shared memory control operations</li>
        <li><a href="./shmget">shmget(2)</a>                &mdash; get shared memory area identifier</li>
        <li><a href="./shutdown">shutdown(2)</a>              &mdash; shut down part of a full-duplex connection</li>
        <li><a href="./sigaction">sigaction(2)</a>             &mdash; software signal facilities</li>
        <li><a href="./sigaltstack">sigaltstack(2)</a>           &mdash; set and/or get signal stack context</li>
        <li><a href="./sigblock">sigblock(2)</a>              &mdash; block signals</li>
        <li><a href="./sigpause">sigpause(2)</a>              &mdash; atomically release blocked signals and wait for interrupt</li>
        <li><a href="./sigpending">sigpending(2)</a>            &mdash; get pending signals</li>
        <li><a href="./sigprocmask">sigprocmask(2)</a>           &mdash; manipulate current signal mask</li>
        <li><a href="./sigsetmask">sigsetmask(2)</a>            &mdash; set current signal mask</li>
        <li><a href="./sigstack">sigstack(2)</a>              &mdash; set and/or get signal stack context</li>
        <li><a href="./sigsuspend">sigsuspend(2)</a>            &mdash; atomically release blocked signals and wait for interrupt</li>
        <li><a href="./sigvec">sigvec(2)</a>                &mdash; software signal facilities</li>
        <li><a href="./sigwait">sigwait(2)</a>               &mdash; select a set of signals</li>
        <li><a href="./socket">socket(2)</a>                &mdash; create an endpoint for communication</li>
        <li><a href="./socketpair">socketpair(2)</a>            &mdash; create a pair of connected sockets</li>
        <li><a href="./statfs">statfs(2)</a>, <a href="./statfs64">statfs64(2)</a>, <a href="./fstatfs">fstatfs(2)</a>, <a href="./fstatfs64">fstatfs64(2)</a> &mdash; get file system statistics</li>
        <li><a href="./symlink">symlink(2)</a>, <a href="./symlinkat">symlinkat(2)</a> &mdash; make symbolic link to a file</li>
        <li><a href="./sync">sync(2)</a>                  &mdash; synchronize disk block in-core status with that on disk</li>
        <li><a href="./umask">umask(2)</a>                 &mdash; set file creation mode mask</li>
        <li><a href="./undelete">undelete(2)</a>              &mdash; attempt to recover a deleted file</li>
        <li><a href="./unlink">unlink(2)</a>, <a href="./unlinkat">unlinkat(2)</a>   &mdash; remove directory entry</li>
        <li><a href="./vfork">vfork(2)</a>                 &mdash; deprecated system call to create a new process</li>
        <li><a href="./wait">wait(2)</a>, <a href="./wait3">wait3(2)</a>, <a href="./wait4">wait4(2)</a>, <a href="./waitpid">waitpid(2)</a> &mdash; wait for process termination</li>
      </ul>
    </main>
  </body>
</html>
