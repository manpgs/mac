<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>man3G &mdash; macOS Manpages</title>
    <link rel="stylesheet" href="../style.css">
  </head>
  <body>
    <main>
      <h1><a href="../">macOS</a> &mdash; OpenGL Functions</h1>
      <ul class="whatis">
        <li><a href="./glActiveTexture">glActiveTexture(3G)</a>      &mdash; select active texture unit</li>
        <li><a href="./glAttachShader">glAttachShader(3G)</a>       &mdash; Attaches a shader object to a program object</li>
        <li><a href="./glBeginConditionalRender">glBeginConditionalRender(3G)</a> &mdash; start conditional rendering</li>
        <li><a href="./glBeginQuery">glBeginQuery(3G)</a>         &mdash; delimit the boundaries of a query object</li>
        <li><a href="./glBeginTransformFeedback">glBeginTransformFeedback(3G)</a> &mdash; start transform feedback operation</li>
        <li><a href="./glBindAttribLocation">glBindAttribLocation(3G)</a> &mdash; Associates a generic vertex attribute index with a named attribute variable</li>
        <li><a href="./glBindBuffer">glBindBuffer(3G)</a>         &mdash; bind a named buffer object</li>
        <li><a href="./glBindBufferBase">glBindBufferBase(3G)</a>     &mdash; bind a buffer object to an indexed buffer target</li>
        <li><a href="./glBindBufferRange">glBindBufferRange(3G)</a>    &mdash; bind a range within a buffer object to an indexed buffer target</li>
        <li><a href="./glBindFragDataLocation">glBindFragDataLocation(3G)</a> &mdash; bind a user-defined varying out variable to a fragment shader color number</li>
        <li><a href="./glBindFragDataLocationIndexed">glBindFragDataLocationIndexed(3G)</a> &mdash; bind a user-defined varying out variable to a fragment shader color number and index</li>
        <li><a href="./glBindFramebuffer">glBindFramebuffer(3G)</a>    &mdash; bind a framebuffer to a framebuffer target</li>
        <li><a href="./glBindRenderbuffer">glBindRenderbuffer(3G)</a>   &mdash; bind a renderbuffer to a renderbuffer target</li>
        <li><a href="./glBindSampler">glBindSampler(3G)</a>        &mdash; bind a named sampler to a texturing target</li>
        <li><a href="./glBindTexture">glBindTexture(3G)</a>        &mdash; bind a named texture to a texturing target</li>
        <li><a href="./glBindVertexArray">glBindVertexArray(3G)</a>    &mdash; bind a vertex array object</li>
        <li><a href="./glBlendColor">glBlendColor(3G)</a>         &mdash; set the blend color</li>
        <li><a href="./glBlendEquation">glBlendEquation(3G)</a>      &mdash; specify the equation used for both the RGB blend equation and the Alpha blend equation</li>
        <li><a href="./glBlendEquationSeparate">glBlendEquationSeparate(3G)</a> &mdash; set the RGB blend equation and the alpha blend equation separately</li>
        <li><a href="./glBlendFunc">glBlendFunc(3G)</a>          &mdash; specify pixel arithmetic</li>
        <li><a href="./glBlendFuncSeparate">glBlendFuncSeparate(3G)</a>  &mdash; specify pixel arithmetic for RGB and alpha components separately</li>
        <li><a href="./glBlitFramebuffer">glBlitFramebuffer(3G)</a>    &mdash; copy a block of pixels from the read framebuffer to the draw framebuffer</li>
        <li><a href="./glBufferData">glBufferData(3G)</a>         &mdash; creates and initializes a buffer objects data store</li>
        <li><a href="./glBufferSubData">glBufferSubData(3G)</a>      &mdash; updates a subset of a buffer objects data store</li>
        <li><a href="./glCheckFramebufferStatus">glCheckFramebufferStatus(3G)</a> &mdash; check the completeness status of a framebuffer</li>
        <li><a href="./glClampColor">glClampColor(3G)</a>         &mdash; specify whether data read via glReadPixels() should be clamped</li>
        <li><a href="./glClear">glClear(3G)</a>              &mdash; clear buffers to preset values</li>
        <li><a href="./glClearBuffer">glClearBuffer(3G)</a>        &mdash; clear individual buffers of the currently bound draw framebuffer</li>
        <li><a href="./glClearColor">glClearColor(3G)</a>         &mdash; specify clear values for the color buffers</li>
        <li><a href="./glClearDepth">glClearDepth(3G)</a>         &mdash; specify the clear value for the depth buffer</li>
        <li><a href="./glClearStencil">glClearStencil(3G)</a>       &mdash; specify the clear value for the stencil buffer</li>
        <li><a href="./glClientWaitSync">glClientWaitSync(3G)</a>     &mdash; block and wait for a sync object to become signaled</li>
        <li><a href="./glColorMask">glColorMask(3G)</a>          &mdash; enable and disable writing of frame buffer color components</li>
        <li><a href="./glCompileShader">glCompileShader(3G)</a>      &mdash; Compiles a shader object</li>
        <li><a href="./glCompressedTexImage1D">glCompressedTexImage1D(3G)</a> &mdash; specify a one-dimensional texture image in a compressed format</li>
        <li><a href="./glCompressedTexImage2D">glCompressedTexImage2D(3G)</a> &mdash; specify a two-dimensional texture image in a compressed format</li>
        <li><a href="./glCompressedTexImage3D">glCompressedTexImage3D(3G)</a> &mdash; specify a three-dimensional texture image in a compressed format</li>
        <li><a href="./glCompressedTexSubImage1D">glCompressedTexSubImage1D(3G)</a> &mdash; specify a one-dimensional texture subimage in a compressed format</li>
        <li><a href="./glCompressedTexSubImage2D">glCompressedTexSubImage2D(3G)</a> &mdash; specify a two-dimensional texture subimage in a compressed format</li>
        <li><a href="./glCompressedTexSubImage3D">glCompressedTexSubImage3D(3G)</a> &mdash; specify a three-dimensional texture subimage in a compressed format</li>
        <li><a href="./glCopyBufferSubData">glCopyBufferSubData(3G)</a>  &mdash; copy part of the data store of a buffer object to the data store of another buffer object</li>
        <li><a href="./glCopyTexImage1D">glCopyTexImage1D(3G)</a>     &mdash; copy pixels into a 1D texture image</li>
        <li><a href="./glCopyTexImage2D">glCopyTexImage2D(3G)</a>     &mdash; copy pixels into a 2D texture image</li>
        <li><a href="./glCopyTexSubImage1D">glCopyTexSubImage1D(3G)</a>  &mdash; copy a one-dimensional texture subimage</li>
        <li><a href="./glCopyTexSubImage2D">glCopyTexSubImage2D(3G)</a>  &mdash; copy a two-dimensional texture subimage</li>
        <li><a href="./glCopyTexSubImage3D">glCopyTexSubImage3D(3G)</a>  &mdash; copy a three-dimensional texture subimage</li>
        <li><a href="./glCreateProgram">glCreateProgram(3G)</a>      &mdash; Creates a program object</li>
        <li><a href="./glCreateShader">glCreateShader(3G)</a>       &mdash; Creates a shader object</li>
        <li><a href="./glCullFace">glCullFace(3G)</a>           &mdash; specify whether front- or back-facing facets can be culled</li>
        <li><a href="./glDeleteBuffers">glDeleteBuffers(3G)</a>      &mdash; delete named buffer objects</li>
        <li><a href="./glDeleteFramebuffers">glDeleteFramebuffers(3G)</a> &mdash; delete framebuffer objects</li>
        <li><a href="./glDeleteProgram">glDeleteProgram(3G)</a>      &mdash; Deletes a program object</li>
        <li><a href="./glDeleteQueries">glDeleteQueries(3G)</a>      &mdash; delete named query objects</li>
        <li><a href="./glDeleteRenderbuffers">glDeleteRenderbuffers(3G)</a> &mdash; delete renderbuffer objects</li>
        <li><a href="./glDeleteSamplers">glDeleteSamplers(3G)</a>     &mdash; delete named sampler objects</li>
        <li><a href="./glDeleteShader">glDeleteShader(3G)</a>       &mdash; Deletes a shader object</li>
        <li><a href="./glDeleteSync">glDeleteSync(3G)</a>         &mdash; delete a sync object</li>
        <li><a href="./glDeleteTextures">glDeleteTextures(3G)</a>     &mdash; delete named textures</li>
        <li><a href="./glDeleteVertexArrays">glDeleteVertexArrays(3G)</a> &mdash; delete vertex array objects</li>
        <li><a href="./glDepthFunc">glDepthFunc(3G)</a>          &mdash; specify the value used for depth buffer comparisons</li>
        <li><a href="./glDepthMask">glDepthMask(3G)</a>          &mdash; enable or disable writing into the depth buffer</li>
        <li><a href="./glDepthRange">glDepthRange(3G)</a>         &mdash; specify mapping of depth values from normalized device coordinates to window coordinates</li>
        <li><a href="./glDetachShader">glDetachShader(3G)</a>       &mdash; Detaches a shader object from a program object to which it is attached</li>
        <li><a href="./glDrawArrays">glDrawArrays(3G)</a>         &mdash; render primitives from array data</li>
        <li><a href="./glDrawArraysInstanced">glDrawArraysInstanced(3G)</a> &mdash; draw multiple instances of a range of elements</li>
        <li><a href="./glDrawBuffer">glDrawBuffer(3G)</a>         &mdash; specify which color buffers are to be drawn into</li>
        <li><a href="./glDrawBuffers">glDrawBuffers(3G)</a>        &mdash; Specifies a list of color buffers to be drawn into</li>
        <li><a href="./glDrawElements">glDrawElements(3G)</a>       &mdash; render primitives from array data</li>
        <li><a href="./glDrawElementsBaseVertex">glDrawElementsBaseVertex(3G)</a> &mdash; render primitives from array data with a per-element offset</li>
        <li><a href="./glDrawElementsInstanced">glDrawElementsInstanced(3G)</a> &mdash; draw multiple instances of a set of elements</li>
        <li><a href="./glDrawElementsInstancedBaseVertex">glDrawElementsInstancedBaseVertex(3G)</a> &mdash; render multiple instances of a set of primitives from array data with a per-element offset</li>
        <li><a href="./glDrawRangeElements">glDrawRangeElements(3G)</a>  &mdash; render primitives from array data</li>
        <li><a href="./glDrawRangeElementsBaseVertex">glDrawRangeElementsBaseVertex(3G)</a> &mdash; render primitives from array data with a per-element offset</li>
        <li><a href="./glEnable">glEnable(3G)</a>             &mdash; enable or disable server-side GL capabilities</li>
        <li><a href="./glEnableVertexAttribArray">glEnableVertexAttribArray(3G)</a>, <a href="./glDisableVertexAttribArray">glDisableVertexAttribArray(3G)</a> &mdash; Enable or disable a generic vertex attribute array</li>
        <li><a href="./glFenceSync">glFenceSync(3G)</a>          &mdash; create a new sync object and insert it into the GL command stream</li>
        <li><a href="./glFinish">glFinish(3G)</a>             &mdash; block until all GL execution is complete</li>
        <li><a href="./glFlush">glFlush(3G)</a>              &mdash; force execution of GL commands in finite time</li>
        <li><a href="./glFlushMappedBufferRange">glFlushMappedBufferRange(3G)</a> &mdash; indicate modifications to a range of a mapped buffer</li>
        <li><a href="./glFramebufferRenderbuffer">glFramebufferRenderbuffer(3G)</a> &mdash; attach a renderbuffer as a logical buffer to the currently bound framebuffer object</li>
        <li><a href="./glFramebufferTexture">glFramebufferTexture(3G)</a> &mdash; attach a level of a texture object as a logical buffer to the currently bound framebuffer object</li>
        <li><a href="./glFramebufferTextureLayer">glFramebufferTextureLayer(3G)</a> &mdash; attach a single layer of a texture to a framebuffer</li>
        <li><a href="./glFrontFace">glFrontFace(3G)</a>          &mdash; define front- and back-facing polygons</li>
        <li><a href="./glGenBuffers">glGenBuffers(3G)</a>         &mdash; generate buffer object names</li>
        <li><a href="./glGenFramebuffers">glGenFramebuffers(3G)</a>    &mdash; generate framebuffer object names</li>
        <li><a href="./glGenQueries">glGenQueries(3G)</a>         &mdash; generate query object names</li>
        <li><a href="./glGenRenderbuffers">glGenRenderbuffers(3G)</a>   &mdash; generate renderbuffer object names</li>
        <li><a href="./glGenSamplers">glGenSamplers(3G)</a>        &mdash; generate sampler object names</li>
        <li><a href="./glGenTextures">glGenTextures(3G)</a>        &mdash; generate texture names</li>
        <li><a href="./glGenVertexArrays">glGenVertexArrays(3G)</a>    &mdash; generate vertex array object names</li>
        <li><a href="./glGenerateMipmap">glGenerateMipmap(3G)</a>     &mdash; generate mipmaps for a specified texture target</li>
        <li><a href="./glGet">glGet(3G)</a>                &mdash; return the value or values of a selected parameter</li>
        <li><a href="./glGetActiveAttrib">glGetActiveAttrib(3G)</a>    &mdash; Returns information about an active attribute variable for the specified program object</li>
        <li><a href="./glGetActiveUniform">glGetActiveUniform(3G)</a>   &mdash; Returns information about an active uniform variable for the specified program object</li>
        <li><a href="./glGetActiveUniformBlock">glGetActiveUniformBlock(3G)</a> &mdash; query information about an active uniform block</li>
        <li><a href="./glGetActiveUniformBlockName">glGetActiveUniformBlockName(3G)</a> &mdash; retrieve the name of an active uniform block</li>
        <li><a href="./glGetActiveUniformName">glGetActiveUniformName(3G)</a> &mdash; query the name of an active uniform</li>
        <li><a href="./glGetActiveUniformsiv">glGetActiveUniformsiv(3G)</a> &mdash; Returns information about several active uniform variables for the specified program object</li>
        <li><a href="./glGetAttachedShaders">glGetAttachedShaders(3G)</a> &mdash; Returns the handles of the shader objects attached to a program object</li>
        <li><a href="./glGetAttribLocation">glGetAttribLocation(3G)</a>  &mdash; Returns the location of an attribute variable</li>
        <li><a href="./glGetBufferParameteriv">glGetBufferParameteriv(3G)</a> &mdash; return parameters of a buffer object</li>
        <li><a href="./glGetBufferPointerv">glGetBufferPointerv(3G)</a>  &mdash; return the pointer to a mapped buffer objects data store</li>
        <li><a href="./glGetBufferSubData">glGetBufferSubData(3G)</a>   &mdash; returns a subset of a buffer objects data store</li>
        <li><a href="./glGetCompressedTexImage">glGetCompressedTexImage(3G)</a> &mdash; return a compressed texture image</li>
        <li><a href="./glGetError">glGetError(3G)</a>           &mdash; return error information</li>
        <li><a href="./glGetFragDataIndex">glGetFragDataIndex(3G)</a>   &mdash; query the bindings of color indices to user-defined varying out variables</li>
        <li><a href="./glGetFragDataLocation">glGetFragDataLocation(3G)</a> &mdash; query the bindings of color numbers to user-defined varying out variables</li>
        <li><a href="./glGetFramebufferAttachmentParameteriv">glGetFramebufferAttachmentParameteriv(3G)</a> &mdash; retrieve information about attachments of a bound framebuffer object</li>
        <li><a href="./glGetMultisamplefv">glGetMultisamplefv(3G)</a>   &mdash; retrieve the location of a sample</li>
        <li><a href="./glGetProgramInfoLog">glGetProgramInfoLog(3G)</a>  &mdash; Returns the information log for a program object</li>
        <li><a href="./glGetProgramiv">glGetProgramiv(3G)</a>       &mdash; Returns a parameter from a program object</li>
        <li><a href="./glGetQueryObject">glGetQueryObject(3G)</a>     &mdash; return parameters of a query object</li>
        <li><a href="./glGetQueryiv">glGetQueryiv(3G)</a>         &mdash; return parameters of a query object target</li>
        <li><a href="./glGetRenderbufferParameteriv">glGetRenderbufferParameteriv(3G)</a> &mdash; retrieve information about a bound renderbuffer object</li>
        <li><a href="./glGetSamplerParameter">glGetSamplerParameter(3G)</a> &mdash; return sampler parameter values</li>
        <li><a href="./glGetShaderInfoLog">glGetShaderInfoLog(3G)</a>   &mdash; Returns the information log for a shader object</li>
        <li><a href="./glGetShaderSource">glGetShaderSource(3G)</a>    &mdash; Returns the source code string from a shader object</li>
        <li><a href="./glGetShaderiv">glGetShaderiv(3G)</a>        &mdash; Returns a parameter from a shader object</li>
        <li><a href="./glGetString">glGetString(3G)</a>          &mdash; return a string describing the current GL connection</li>
        <li><a href="./glGetSynciv">glGetSynciv(3G)</a>          &mdash; query the properties of a sync object</li>
        <li><a href="./glGetTexImage">glGetTexImage(3G)</a>        &mdash; return a texture image</li>
        <li><a href="./glGetTexLevelParameter">glGetTexLevelParameter(3G)</a> &mdash; return texture parameter values for a specific level of detail</li>
        <li><a href="./glGetTexParameter">glGetTexParameter(3G)</a>    &mdash; return texture parameter values</li>
        <li><a href="./glGetTransformFeedbackVarying">glGetTransformFeedbackVarying(3G)</a> &mdash; retrieve information about varying variables selected for transform feedback</li>
        <li><a href="./glGetUniformBlockIndex">glGetUniformBlockIndex(3G)</a> &mdash; retrieve the index of a named uniform block</li>
        <li><a href="./glGetUniformIndices">glGetUniformIndices(3G)</a>  &mdash; retrieve the index of a named uniform block</li>
        <li><a href="./glGetUniformLocation">glGetUniformLocation(3G)</a> &mdash; Returns the location of a uniform variable</li>
        <li><a href="./glGetUniformfv">glGetUniformfv(3G)</a>, <a href="./glGetUniformiv">glGetUniformiv(3G)</a> &mdash; Returns the value of a uniform variable</li>
        <li><a href="./glGetVertexAttribPointerv">glGetVertexAttribPointerv(3G)</a> &mdash; return the address of the specified generic vertex attribute pointer</li>
        <li><a href="./glGetVertexAttribdv">glGetVertexAttribdv(3G)</a>, <a href="./glGetVertexAttribfv">glGetVertexAttribfv(3G)</a>, <a href="./glGetVertexAttribiv">glGetVertexAttribiv(3G)</a> &mdash; Return a generic vertex attribute parameter</li>
        <li><a href="./glHint">glHint(3G)</a>               &mdash; specify implementation-specific hints</li>
        <li><a href="./glIsBuffer">glIsBuffer(3G)</a>           &mdash; determine if a name corresponds to a buffer object</li>
        <li><a href="./glIsEnabled">glIsEnabled(3G)</a>          &mdash; test whether a capability is enabled</li>
        <li><a href="./glIsFramebuffer">glIsFramebuffer(3G)</a>      &mdash; determine if a name corresponds to a framebuffer object</li>
        <li><a href="./glIsProgram">glIsProgram(3G)</a>          &mdash; Determines if a name corresponds to a program object</li>
        <li><a href="./glIsQuery">glIsQuery(3G)</a>            &mdash; determine if a name corresponds to a query object</li>
        <li><a href="./glIsRenderbuffer">glIsRenderbuffer(3G)</a>     &mdash; determine if a name corresponds to a renderbuffer object</li>
        <li><a href="./glIsSampler">glIsSampler(3G)</a>          &mdash; determine if a name corresponds to a sampler object</li>
        <li><a href="./glIsShader">glIsShader(3G)</a>           &mdash; Determines if a name corresponds to a shader object</li>
        <li><a href="./glIsSync">glIsSync(3G)</a>             &mdash; determine if a name corresponds to a sync object</li>
        <li><a href="./glIsTexture">glIsTexture(3G)</a>          &mdash; determine if a name corresponds to a texture</li>
        <li><a href="./glIsVertexArray">glIsVertexArray(3G)</a>      &mdash; determine if a name corresponds to a vertex array object</li>
        <li><a href="./glLineWidth">glLineWidth(3G)</a>          &mdash; specify the width of rasterized lines</li>
        <li><a href="./glLinkProgram">glLinkProgram(3G)</a>        &mdash; Links a program object</li>
        <li><a href="./glLogicOp">glLogicOp(3G)</a>            &mdash; specify a logical pixel operation for rendering</li>
        <li><a href="./glMapBuffer">glMapBuffer(3G)</a>          &mdash; map a buffer objects data store</li>
        <li><a href="./glMapBufferRange">glMapBufferRange(3G)</a>     &mdash; map a section of a buffer objects data store</li>
        <li><a href="./glMultiDrawArrays">glMultiDrawArrays(3G)</a>    &mdash; render multiple sets of primitives from array data</li>
        <li><a href="./glMultiDrawElements">glMultiDrawElements(3G)</a>  &mdash; render multiple sets of primitives by specifying indices of array data elements</li>
        <li><a href="./glMultiDrawElementsBaseVertex">glMultiDrawElementsBaseVertex(3G)</a> &mdash; render multiple sets of primitives by specifying indices of array data elements and an index to apply to each index</li>
        <li><a href="./glMultiTexCoord">glMultiTexCoord(3G)</a>      &mdash; set the current texture coordinates</li>
        <li><a href="./glPixelStore">glPixelStore(3G)</a>         &mdash; set pixel storage modes</li>
        <li><a href="./glPointParameter">glPointParameter(3G)</a>     &mdash; specify point parameters</li>
        <li><a href="./glPointSize">glPointSize(3G)</a>          &mdash; specify the diameter of rasterized points</li>
        <li><a href="./glPolygonMode">glPolygonMode(3G)</a>        &mdash; select a polygon rasterization mode</li>
        <li><a href="./glPolygonOffset">glPolygonOffset(3G)</a>      &mdash; set the scale and units used to calculate depth values</li>
        <li><a href="./glPrimitiveRestartIndex">glPrimitiveRestartIndex(3G)</a> &mdash; specify the primitive restart index</li>
        <li><a href="./glProvokingVertex">glProvokingVertex(3G)</a>    &mdash; specifiy the vertex to be used as the source of data for flat shaded varyings</li>
        <li><a href="./glQueryCounter">glQueryCounter(3G)</a>       &mdash; record the GL time into a query object after all previous commands have reached the GL server but have not yet necessarily executed</li>
        <li><a href="./glReadBuffer">glReadBuffer(3G)</a>         &mdash; select a color buffer source for pixels</li>
        <li><a href="./glReadPixels">glReadPixels(3G)</a>         &mdash; read a block of pixels from the frame buffer</li>
        <li><a href="./glRenderbufferStorage">glRenderbufferStorage(3G)</a> &mdash; establish data storage, format and dimensions of a renderbuffer objects image</li>
        <li><a href="./glRenderbufferStorageMultisample">glRenderbufferStorageMultisample(3G)</a> &mdash; establish data storage, format, dimensions and sample count of a renderbuffer objects image</li>
        <li><a href="./glSampleCoverage">glSampleCoverage(3G)</a>     &mdash; specify multisample coverage parameters</li>
        <li><a href="./glSampleMaski">glSampleMaski(3G)</a>        &mdash; set the value of a sub-word of the sample mask</li>
        <li><a href="./glSamplerParameter">glSamplerParameter(3G)</a>   &mdash; set sampler parameters</li>
        <li><a href="./glScissor">glScissor(3G)</a>            &mdash; define the scissor box</li>
        <li><a href="./glShaderSource">glShaderSource(3G)</a>       &mdash; Replaces the source code in a shader object</li>
        <li><a href="./glStencilFunc">glStencilFunc(3G)</a>        &mdash; set front and back function and reference value for stencil testing</li>
        <li><a href="./glStencilFuncSeparate">glStencilFuncSeparate(3G)</a> &mdash; set front and/or back function and reference value for stencil testing</li>
        <li><a href="./glStencilMask">glStencilMask(3G)</a>        &mdash; control the front and back writing of individual bits in the stencil planes</li>
        <li><a href="./glStencilMaskSeparate">glStencilMaskSeparate(3G)</a> &mdash; control the front and/or back writing of individual bits in the stencil planes</li>
        <li><a href="./glStencilOp">glStencilOp(3G)</a>          &mdash; set front and back stencil test actions</li>
        <li><a href="./glStencilOpSeparate">glStencilOpSeparate(3G)</a>  &mdash; set front and/or back stencil test actions</li>
        <li><a href="./glTexBuffer">glTexBuffer(3G)</a>          &mdash; attach the storage for a buffer object to the active buffer texture</li>
        <li><a href="./glTexImage1D">glTexImage1D(3G)</a>         &mdash; specify a one-dimensional texture image</li>
        <li><a href="./glTexImage2D">glTexImage2D(3G)</a>         &mdash; specify a two-dimensional texture image</li>
        <li><a href="./glTexImage2DMultisample">glTexImage2DMultisample(3G)</a> &mdash; establish the data storage, format, dimensions, and number of samples of a multisample textures image</li>
        <li><a href="./glTexImage3D">glTexImage3D(3G)</a>         &mdash; specify a three-dimensional texture image</li>
        <li><a href="./glTexImage3DMultisample">glTexImage3DMultisample(3G)</a> &mdash; establish the data storage, format, dimensions, and number of samples of a multisample textures image</li>
        <li><a href="./glTexParameter">glTexParameter(3G)</a>       &mdash; set texture parameters</li>
        <li><a href="./glTexSubImage1D">glTexSubImage1D(3G)</a>      &mdash; specify a one-dimensional texture subimage</li>
        <li><a href="./glTexSubImage2D">glTexSubImage2D(3G)</a>      &mdash; specify a two-dimensional texture subimage</li>
        <li><a href="./glTexSubImage3D">glTexSubImage3D(3G)</a>      &mdash; specify a three-dimensional texture subimage</li>
        <li><a href="./glTransformFeedbackVaryings">glTransformFeedbackVaryings(3G)</a> &mdash; specify values to record in transform feedback buffers</li>
        <li><a href="./glUniform1f">glUniform1f(3G)</a>, <a href="./glUniform2f">glUniform2f(3G)</a>, <a href="./glUniform3f">glUniform3f(3G)</a>, <a href="./glUniform4f">glUniform4f(3G)</a>, <a href="./glUniform1i">glUniform1i(3G)</a>, <a href="./glUniform2i">glUniform2i(3G)</a>, <a href="./glUniform3i">glUniform3i(3G)</a>, <a href="./glUniform4i">glUniform4i(3G)</a>, <a href="./glUniform1ui">glUniform1ui(3G)</a>, <a href="./glUniform2ui">glUniform2ui(3G)</a>, <a href="./glUniform3ui">glUniform3ui(3G)</a>, <a href="./glUniform4ui">glUniform4ui(3G)</a>, <a href="./glUniform1fv">glUniform1fv(3G)</a>, <a href="./glUniform2fv">glUniform2fv(3G)</a>, <a href="./glUniform3fv">glUniform3fv(3G)</a>, <a href="./glUniform4fv">glUniform4fv(3G)</a>, <a href="./glUniform1iv">glUniform1iv(3G)</a>, <a href="./glUniform2iv">glUniform2iv(3G)</a>, <a href="./glUniform3iv">glUniform3iv(3G)</a>, <a href="./glUniform4iv">glUniform4iv(3G)</a>, <a href="./glUniform1uiv">glUniform1uiv(3G)</a>, <a href="./glUniform2uiv">glUniform2uiv(3G)</a>, <a href="./glUniform3uiv">glUniform3uiv(3G)</a>, <a href="./glUniform4uiv">glUniform4uiv(3G)</a>, <a href="./glUniformMatrix2fv">glUniformMatrix2fv(3G)</a>, <a href="./glUniformMatrix3fv">glUniformMatrix3fv(3G)</a>, <a href="./glUniformMatrix4fv">glUniformMatrix4fv(3G)</a>, <a href="./glUniformMatrix2x3fv">glUniformMatrix2x3fv(3G)</a>, <a href="./glUniformMatrix3x2fv">glUniformMatrix3x2fv(3G)</a>, <a href="./glUniformMatrix2x4fv">glUniformMatrix2x4fv(3G)</a>, <a href="./glUniformMatrix4x2fv">glUniformMatrix4x2fv(3G)</a>, <a href="./glUniformMatrix3x4fv">glUniformMatrix3x4fv(3G)</a>, <a href="./glUniformMatrix4x3fv">glUniformMatrix4x3fv(3G)</a> &mdash; Specify the value of a uniform variable for the current program object</li>
        <li><a href="./glUniformBlockBinding">glUniformBlockBinding(3G)</a> &mdash; assign a binding point to an active uniform block</li>
        <li><a href="./glUseProgram">glUseProgram(3G)</a>         &mdash; Installs a program object as part of current rendering state</li>
        <li><a href="./glValidateProgram">glValidateProgram(3G)</a>    &mdash; Validates a program object</li>
        <li><a href="./glVertexAttrib">glVertexAttrib(3G)</a>       &mdash; Specifies the value of a generic vertex attribute</li>
        <li><a href="./glVertexAttribDivisor">glVertexAttribDivisor(3G)</a> &mdash; modify the rate at which generic vertex attributes advance during instanced rendering</li>
        <li><a href="./glVertexAttribPointer">glVertexAttribPointer(3G)</a> &mdash; define an array of generic vertex attribute data</li>
        <li><a href="./glViewport">glViewport(3G)</a>           &mdash; set the viewport</li>
        <li><a href="./glWaitSync">glWaitSync(3G)</a>           &mdash; instruct the GL server to block until the specified sync object becomes signaled</li>
      </ul>
    </main>
  </body>
</html>
